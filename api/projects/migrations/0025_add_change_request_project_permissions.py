# Generated by Django 4.2.15 on 2024-09-17 14:07

from django.db import migrations

from permissions.models import PROJECT_PERMISSION_TYPE
from projects.permissions import (
    APPROVE_PROJECT_LEVEL_CHANGE_REQUESTS,
    MANAGE_PROJECT_LEVEL_CHANGE_REQUESTS,
    PROJECT_PERMISSIONS,
)


def remove_default_project_permissions(apps, schema_model):
    PermissionModel = apps.get_model(  # pragma: no cover
        "permissions", "PermissionModel"
    )
    PermissionModel.objects.get(  # pragma: no cover
        key=MANAGE_PROJECT_LEVEL_CHANGE_REQUESTS
    ).delete()
    PermissionModel.objects.get(  # pragma: no cover
        key=APPROVE_PROJECT_LEVEL_CHANGE_REQUESTS
    ).delete()


def insert_default_project_permissions(apps, schema_model):
    PermissionModel = apps.get_model("permissions", "PermissionModel")
    manage_description = approve_description = None

    for project_permission in PROJECT_PERMISSIONS:
        if project_permission[0] == MANAGE_PROJECT_LEVEL_CHANGE_REQUESTS:
            manage_description = project_permission[1]
        elif project_permission[0] == APPROVE_PROJECT_LEVEL_CHANGE_REQUESTS:
            approve_description = project_permission[1]

    assert manage_description
    assert approve_description

    PermissionModel.objects.get_or_create(
        key=MANAGE_PROJECT_LEVEL_CHANGE_REQUESTS,
        description=manage_description,
        type=PROJECT_PERMISSION_TYPE,
    )
    PermissionModel.objects.get_or_create(
        key=APPROVE_PROJECT_LEVEL_CHANGE_REQUESTS,
        description=approve_description,
        type=PROJECT_PERMISSION_TYPE,
    )


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0024_add_project_edge_v2_migration_read_capacity_budget"),
    ]

    operations = [
        migrations.RunPython(
            insert_default_project_permissions,
            reverse_code=remove_default_project_permissions,
        ),
    ]
