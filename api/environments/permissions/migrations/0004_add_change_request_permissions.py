# Generated by Django 3.2.15 on 2022-09-13 19:18
import typing

from django.db import migrations

from environments.permissions.constants import (
    CREATE_CHANGE_REQUEST,
    APPROVE_CHANGE_REQUEST,
    UPDATE_FEATURE_STATE,
)
from permissions.models import ENVIRONMENT_PERMISSION_TYPE


def add_change_request_permissions(apps, schema_editor):
    PermissionModel = apps.get_model("permissions", "PermissionModel")
    UserEnvironmentPermission = apps.get_model(
        "environment_permissions",
        "UserEnvironmentPermission",
    )
    UserPermissionGroupEnvironmentPermission = apps.get_model(
        "environment_permissions",
        "UserPermissionGroupEnvironmentPermission",
    )

    create_cr_permission_model, _ = PermissionModel.objects.get_or_create(
        key=CREATE_CHANGE_REQUEST,
        description="Permission to create change requests in the given environment.",
        type=ENVIRONMENT_PERMISSION_TYPE,
    )

    approve_cr_permission_model, _ = PermissionModel.objects.get_or_create(
        key=APPROVE_CHANGE_REQUEST,
        description="Permission to approve change requests in the given environment.",
        type=ENVIRONMENT_PERMISSION_TYPE,
    )

    new_permissions = [create_cr_permission_model, approve_cr_permission_model]

    _add_new_permissions(
        UserEnvironmentPermission, "userenvironmentpermission", new_permissions
    )
    _add_new_permissions(
        UserPermissionGroupEnvironmentPermission,
        "userpermissiongroupenvironmentpermission",
        new_permissions,
    )


def _add_new_permissions(
    model_class: type, reverse_attribute_name: str, permission_models: typing.List
):
    new_environment_permission_through_models = []
    environment_permission_through_model_class = model_class.permissions.through

    for environment_permission in model_class.objects.filter(
        permissions__key=UPDATE_FEATURE_STATE
    ):
        new_environment_permission_through_models.extend(
            [
                environment_permission_through_model_class(
                    **{
                        f"{reverse_attribute_name}_id": environment_permission.id,
                        "permissionmodel_id": permission_model.key,
                    }
                )
                for permission_model in permission_models
            ]
        )

    environment_permission_through_model_class.objects.bulk_create(
        new_environment_permission_through_models
    )


def remove_change_request_permissions(apps, schema_editor):
    PermissionModel = apps.get_model("permissions", "PermissionModel")

    PermissionModel.objects.filter(
        key__in=[CREATE_CHANGE_REQUEST, APPROVE_CHANGE_REQUEST]
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("environment_permissions", "0003_add_manage_identities_permission"),
    ]

    operations = [
        migrations.RunPython(
            add_change_request_permissions,
            reverse_code=remove_change_request_permissions,
        )
    ]
