# You can use this to run the e2e tests in a docker container running in frontend below
# To run:
# docker-compose -f docker-compose-e2e-tests.pgpool.yml build
# docker-compose -f docker-compose-e2e-tests.pgpool.yml up

services:
  pg-0:
    image: docker.io/bitnami/postgresql-repmgr:14
    ports:
      - 5432
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=password
      - POSTGRESQL_USERNAME=flagsmith
      - POSTGRESQL_PASSWORD=password
      - POSTGRESQL_DATABASE=flagsmith
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-1,pg-0
      - REPMGR_NODE_NAME=pg-0
      - REPMGR_NODE_NETWORK_NAME=pg-0
      - REPMGR_USERNAME=repmgr
      - REPMGR_PASSWORD=repmgrpassword

  pg-1:
    image: docker.io/bitnami/postgresql-repmgr:14
    ports:
      - 5432
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=password
      - POSTGRESQL_USERNAME=flagsmith
      - POSTGRESQL_PASSWORD=password
      - POSTGRESQL_DATABASE=flagsmith
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
      - REPMGR_PRIMARY_HOST=pg-0
      - REPMGR_PARTNER_NODES=pg-0,pg-1
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
      - REPMGR_USERNAME=repmgr
      - REPMGR_PASSWORD=repmgrpassword

  pgpool:
    image: docker.io/bitnami/pgpool:4
    ports:
      - 5432:5432
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-0:5432,1:pg-1:5432
      - PGPOOL_SR_CHECK_USER=repmgr
      - PGPOOL_SR_CHECK_PASSWORD=repmgrpassword
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=password
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=adminpassword
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
      - PGPOOL_POSTGRES_CUSTOM_USERS=flagsmith
      - PGPOOL_POSTGRES_CUSTOM_PASSWORDS=password
    healthcheck:
      test: [ 'CMD', '/opt/bitnami/scripts/pgpool/healthcheck.sh' ]
      interval: 10s
      timeout: 5s
      retries: 5

  flagsmith-api:
    extends:
      file: ./.common.docker-compose.e2e-tests.yml
      service: flagsmith-api
    environment:
      DATABASE_URL: postgresql://flagsmith:password@pgpool:5432/flagsmith
    depends_on:
      pgpool:
        condition: service_healthy
    links:
      - pgpool:pgpool

  frontend:
    extends:
      file: ./.common.docker-compose.e2e-tests.yml
      service: frontend
