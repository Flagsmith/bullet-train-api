name: Platform Pull Requests

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - docs/**
      - infrastructure/**

jobs:
  validate-pr-title:
    name: Validate Conventional Commit title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: | # mirrors changelog-sections in the /release-please-config.json
            fix
            feat
            infra
            docs
            chore
            build
            deps
            ci
            refactor
            style
            test

  docker-build-unified:
    if: github.event.pull_request.draft == false
    name: Build Unified Image
    uses: ./.github/workflows/.reusable-docker-build.yml
    with:
      file: Dockerfile
      image-name: flagsmith

  docker-build-api:
    if: github.event.pull_request.draft == false
    name: Build API Image
    uses: ./.github/workflows/.reusable-docker-build.yml
    with:
      file: api/Dockerfile
      image-name: flagsmith-api

  docker-build-frontend:
    if: github.event.pull_request.draft == false
    name: Build Frontend Image
    uses: ./.github/workflows/.reusable-docker-build.yml
    with:
      file: frontend/Dockerfile
      image-name: flagsmith-frontend

  docker-build-e2e:
    if: github.event.pull_request.draft == false
    name: Build E2E Image
    uses: ./.github/workflows/.reusable-docker-build.yml
    with:
      file: frontend/Dockerfile.e2e
      image-name: flagsmith-e2e
      scan: false

  run-e2e-tests-local:
    needs: docker-build-api
    name: 'E2E Local: ${{ matrix.args.tests }}'
    uses: ./.github/workflows/.reusable-local-e2e-tests.yml
    with:
      api-image: ${{ needs.docker-build-api.outputs.image }}
      tests: ${{ matrix.args.tests }}
      concurrency: ${{ matrix.args.concurrency }}

    strategy:
      matrix:
        args:
          - tests: segment-part-1 environment
            concurrency: 1
          - tests: segment-part-2
            concurrency: 1
          - tests: segment-part-3 signup flag invite project
            concurrency: 2
          - tests: versioning
            concurrency: 1

  run-e2e-tests-dockerised:
    needs: [docker-build-api, docker-build-e2e]
    name: 'E2E Dockerised: ${{ matrix.args.tests }}'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        args:
          - tests: segment-part-1 environment
            concurrency: 1
          - tests: segment-part-2
            concurrency: 1
          - tests: segment-part-3 signup flag invite project
            concurrency: 2
          - tests: versioning
            concurrency: 1

    steps:
      - name: Cloning repo
        uses: actions/checkout@v4

      - name: Run tests on dockerised frontend
        uses: nick-fields/retry@v3
        with:
          shell: bash
          command: |
            cd frontend
            docker compose -f docker-compose-e2e-tests.yml run frontend \
              npx cross-env E2E_CONCURRENCY=${{ matrix.args.concurrency }} npm run test -- ${{ matrix.args.tests }}
          max_attempts: 2
          retry_on: error
          timeout_minutes: 10
        env:
          API_IMAGE: ${{ needs.docker-build-api.outputs.image }}
          E2E_IMAGE: ${{ needs.docker-build-e2e.outputs.image }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          GITHUB_ACTION_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
