name: API Deploy to Production ECS

on:
    push:
        tags:
            - '*'
        paths:
            - 'api/**'
            - '.github/**'
            - 'infrastructure/aws/production/**'

jobs:
    deploy-production-ecs:
        runs-on: ubuntu-latest
        name: API Deploy to Production ECS
        environment: production

        steps:
            - name: Cloning repo
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Deploy API to Production
              uses: ./.github/actions/api-deploy-ecs
              with:
                github_access_token: ${{ secrets.GH_PRIVATE_ACCESS_TOKEN }}
                aws_access_key_id: AKIARHES7IUA4IU3T5VX
                aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws_ecs_cluster_name: flagsmith-api-cluster-eu-west-2-f0b0108
                aws_ecs_cluster_arn: arn:aws:ecs:eu-west-2:084060095745:cluster/flagsmith-api-cluster-eu-west-2-f0b0108
                aws_ecs_service_name: flagsmith-svc-eu-west-2-c3cd356
                aws_vpc_subnet_id: subnet-40fd6629
                aws_ecs_security_group_id: sg-0ef0e8f66f890b80c
                aws_ecr_repository_arn: 084060095745.dkr.ecr.eu-west-2.amazonaws.com/flagsmith-ecr-934e8a7
                aws_identity_migration_event_bus_name: identity_migration-d46ed1a
                aws_identity_migration_event_bus_rule_id: identity_migration-b03c433
                aws_identity_migration_task_role_arn: arn:aws:iam::084060095745:role/task-exec-role-741a7e3
                aws_task_definitions_directory_path: infrastructure/aws/production
                flagsmith_saml_revision: v0.1.1
                flagsmith_workflows_revision: v1.0.1

    run-tests:
        runs-on: ubuntu-latest
        name: Run E2E Tests
        environment: production
        needs: deploy-production-ecs

        steps:
            - name: Cloning repo
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Test with Chromedriver
              working-directory: frontend
              env:
                  E2E_TEST_TOKEN_STAGING: ${{ secrets.E2E_TEST_TOKEN }}
                  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
                  STATIC_ASSET_CDN_URL: /
              run: |
                  wget -q https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_96.0.4664.110-1_amd64.deb
                  sudo apt install --allow-downgrades -y ./google-chrome*.deb -f
                  google-chrome --version
                  node -v
                  npm i
                  export ENV=prod;
                  npm run env
                  npm run test

